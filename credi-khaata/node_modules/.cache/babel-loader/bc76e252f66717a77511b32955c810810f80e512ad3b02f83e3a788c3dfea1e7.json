{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\gowth\\\\Downloads\\\\Networth_assignment\\\\credi-khaata\\\\src\\\\context\\\\AuthContext.jsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useState, useEffect, useContext } from 'react';\nimport { toast } from 'react-toastify';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext();\nexport const useAuth = () => {\n  _s();\n  return useContext(AuthContext);\n};\n_s(useAuth, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nexport const AuthProvider = ({\n  children\n}) => {\n  _s2();\n  const [currentUser, setCurrentUser] = useState(null);\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    // Check if user is already logged in (from localStorage)\n    const user = localStorage.getItem('user');\n    if (user) {\n      setCurrentUser(JSON.parse(user));\n    }\n    setLoading(false);\n  }, []);\n\n  // Mock login function\n  const login = (email, password) => {\n    // In a real app, you would call your API here\n    return new Promise((resolve, reject) => {\n      setTimeout(() => {\n        if (email && password) {\n          const user = {\n            id: '1',\n            email,\n            name: email.split('@')[0]\n          };\n          setCurrentUser(user);\n          localStorage.setItem('user', JSON.stringify(user));\n          toast.success('Logged in successfully!');\n          resolve(user);\n        } else {\n          toast.error('Invalid credentials');\n          reject(new Error('Invalid credentials'));\n        }\n      }, 1000);\n    });\n  };\n\n  // Mock signup function\n  const signup = (email, password, name) => {\n    // In a real app, you would call your API here\n    return new Promise((resolve, reject) => {\n      setTimeout(() => {\n        if (email && password && name) {\n          const user = {\n            id: '1',\n            email,\n            name\n          };\n          setCurrentUser(user);\n          localStorage.setItem('user', JSON.stringify(user));\n          toast.success('Account created successfully!');\n          resolve(user);\n        } else {\n          toast.error('Invalid information');\n          reject(new Error('Invalid information'));\n        }\n      }, 1000);\n    });\n  };\n  const logout = () => {\n    setCurrentUser(null);\n    localStorage.removeItem('user');\n    toast.info('Logged out successfully');\n  };\n  const value = {\n    currentUser,\n    login,\n    signup,\n    logout,\n    loading\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: value,\n    children: !loading && children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 5\n  }, this);\n};\n_s2(AuthProvider, \"+Bt7EujFHjK6mRV3YX1iAtSqXvQ=\");\n_c = AuthProvider;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useState","useEffect","useContext","toast","jsxDEV","_jsxDEV","AuthContext","useAuth","_s","AuthProvider","children","_s2","currentUser","setCurrentUser","loading","setLoading","user","localStorage","getItem","JSON","parse","login","email","password","Promise","resolve","reject","setTimeout","id","name","split","setItem","stringify","success","error","Error","signup","logout","removeItem","info","value","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/gowth/Downloads/Networth_assignment/credi-khaata/src/context/AuthContext.jsx"],"sourcesContent":["import React, { createContext, useState, useEffect, useContext } from 'react';\r\nimport { toast } from 'react-toastify';\r\n\r\nconst AuthContext = createContext();\r\n\r\nexport const useAuth = () => useContext(AuthContext);\r\n\r\nexport const AuthProvider = ({ children }) => {\r\n  const [currentUser, setCurrentUser] = useState(null);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    // Check if user is already logged in (from localStorage)\r\n    const user = localStorage.getItem('user');\r\n    if (user) {\r\n      setCurrentUser(JSON.parse(user));\r\n    }\r\n    setLoading(false);\r\n  }, []);\r\n\r\n  // Mock login function\r\n  const login = (email, password) => {\r\n    // In a real app, you would call your API here\r\n    return new Promise((resolve, reject) => {\r\n      setTimeout(() => {\r\n        if (email && password) {\r\n          const user = { id: '1', email, name: email.split('@')[0] };\r\n          setCurrentUser(user);\r\n          localStorage.setItem('user', JSON.stringify(user));\r\n          toast.success('Logged in successfully!');\r\n          resolve(user);\r\n        } else {\r\n          toast.error('Invalid credentials');\r\n          reject(new Error('Invalid credentials'));\r\n        }\r\n      }, 1000);\r\n    });\r\n  };\r\n\r\n  // Mock signup function\r\n  const signup = (email, password, name) => {\r\n    // In a real app, you would call your API here\r\n    return new Promise((resolve, reject) => {\r\n      setTimeout(() => {\r\n        if (email && password && name) {\r\n          const user = { id: '1', email, name };\r\n          setCurrentUser(user);\r\n          localStorage.setItem('user', JSON.stringify(user));\r\n          toast.success('Account created successfully!');\r\n          resolve(user);\r\n        } else {\r\n          toast.error('Invalid information');\r\n          reject(new Error('Invalid information'));\r\n        }\r\n      }, 1000);\r\n    });\r\n  };\r\n\r\n  const logout = () => {\r\n    setCurrentUser(null);\r\n    localStorage.removeItem('user');\r\n    toast.info('Logged out successfully');\r\n  };\r\n\r\n  const value = {\r\n    currentUser,\r\n    login,\r\n    signup,\r\n    logout,\r\n    loading\r\n  };\r\n\r\n  return (\r\n    <AuthContext.Provider value={value}>\r\n      {!loading && children}\r\n    </AuthContext.Provider>\r\n  );\r\n};\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}