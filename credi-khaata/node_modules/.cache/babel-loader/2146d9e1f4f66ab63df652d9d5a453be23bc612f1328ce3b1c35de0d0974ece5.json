{"ast":null,"code":"export const formatDateForInput = dateString => {\n  const date = new Date(dateString);\n  return date.toISOString().split('T')[0];\n};\n\n// Format date to readable format for display\nexport const formatDate = dateString => {\n  const options = {\n    year: 'numeric',\n    month: 'short',\n    day: 'numeric'\n  };\n  return new Date(dateString).toLocaleDateString(undefined, options);\n};\n\n// Check if a date is past due\nexport const isPastDue = dateString => {\n  const today = new Date();\n  today.setHours(0, 0, 0, 0);\n  const dueDate = new Date(dateString);\n  dueDate.setHours(0, 0, 0, 0);\n  return dueDate < today;\n};\n\n// Calculate days remaining until due date\nexport const daysUntilDue = dateString => {\n  const today = new Date();\n  today.setHours(0, 0, 0, 0);\n  const dueDate = new Date(dateString);\n  dueDate.setHours(0, 0, 0, 0);\n  const diffTime = dueDate - today;\n  const diffDays = Math.ceil(diffTime / (1000 * 60 * 60 * 24));\n  return diffDays;\n};","map":{"version":3,"names":["formatDateForInput","dateString","date","Date","toISOString","split","formatDate","options","year","month","day","toLocaleDateString","undefined","isPastDue","today","setHours","dueDate","daysUntilDue","diffTime","diffDays","Math","ceil"],"sources":["C:/Users/gowth/Downloads/Networth_assignment/credi-khaata/src/utils/dateUtils.js"],"sourcesContent":["export const formatDateForInput = (dateString) => {\r\n    const date = new Date(dateString);\r\n    return date.toISOString().split('T')[0];\r\n  };\r\n  \r\n  // Format date to readable format for display\r\n  export const formatDate = (dateString) => {\r\n    const options = { year: 'numeric', month: 'short', day: 'numeric' };\r\n    return new Date(dateString).toLocaleDateString(undefined, options);\r\n  };\r\n  \r\n  // Check if a date is past due\r\n  export const isPastDue = (dateString) => {\r\n    const today = new Date();\r\n    today.setHours(0, 0, 0, 0);\r\n    \r\n    const dueDate = new Date(dateString);\r\n    dueDate.setHours(0, 0, 0, 0);\r\n    \r\n    return dueDate < today;\r\n  };\r\n  \r\n  // Calculate days remaining until due date\r\n  export const daysUntilDue = (dateString) => {\r\n    const today = new Date();\r\n    today.setHours(0, 0, 0, 0);\r\n    \r\n    const dueDate = new Date(dateString);\r\n    dueDate.setHours(0, 0, 0, 0);\r\n    \r\n    const diffTime = dueDate - today;\r\n    const diffDays = Math.ceil(diffTime / (1000 * 60 * 60 * 24));\r\n    \r\n    return diffDays;\r\n  };"],"mappings":"AAAA,OAAO,MAAMA,kBAAkB,GAAIC,UAAU,IAAK;EAC9C,MAAMC,IAAI,GAAG,IAAIC,IAAI,CAACF,UAAU,CAAC;EACjC,OAAOC,IAAI,CAACE,WAAW,CAAC,CAAC,CAACC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;AACzC,CAAC;;AAED;AACA,OAAO,MAAMC,UAAU,GAAIL,UAAU,IAAK;EACxC,MAAMM,OAAO,GAAG;IAAEC,IAAI,EAAE,SAAS;IAAEC,KAAK,EAAE,OAAO;IAAEC,GAAG,EAAE;EAAU,CAAC;EACnE,OAAO,IAAIP,IAAI,CAACF,UAAU,CAAC,CAACU,kBAAkB,CAACC,SAAS,EAAEL,OAAO,CAAC;AACpE,CAAC;;AAED;AACA,OAAO,MAAMM,SAAS,GAAIZ,UAAU,IAAK;EACvC,MAAMa,KAAK,GAAG,IAAIX,IAAI,CAAC,CAAC;EACxBW,KAAK,CAACC,QAAQ,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;EAE1B,MAAMC,OAAO,GAAG,IAAIb,IAAI,CAACF,UAAU,CAAC;EACpCe,OAAO,CAACD,QAAQ,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;EAE5B,OAAOC,OAAO,GAAGF,KAAK;AACxB,CAAC;;AAED;AACA,OAAO,MAAMG,YAAY,GAAIhB,UAAU,IAAK;EAC1C,MAAMa,KAAK,GAAG,IAAIX,IAAI,CAAC,CAAC;EACxBW,KAAK,CAACC,QAAQ,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;EAE1B,MAAMC,OAAO,GAAG,IAAIb,IAAI,CAACF,UAAU,CAAC;EACpCe,OAAO,CAACD,QAAQ,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;EAE5B,MAAMG,QAAQ,GAAGF,OAAO,GAAGF,KAAK;EAChC,MAAMK,QAAQ,GAAGC,IAAI,CAACC,IAAI,CAACH,QAAQ,IAAI,IAAI,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC,CAAC;EAE5D,OAAOC,QAAQ;AACjB,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}